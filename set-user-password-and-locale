#! /bin/bash

# This script is meant to be run by TailsGreeter
# It reads /var/lib/gdm3/tails.locale for locale name
# and /var/lib/gdm3/tails.password for the password which is stored in
# the $TAILS_USER_PASSWORD variable.
# It's executed by GDM as root after user's login:
# ALWAYS: exit with 0 otherwise it'll break logon process completely.

# For whatever reason, /usr/sbin (needed by at least chpasswd and
# adduser) is not in our environment
export PATH="/usr/sbin:${PATH}"
LIVE_PASSWORD=live
SUDOERS=/etc/sudoers.d/tails-greeter
KBDSET=/etc/default/keyboard
CONSET=/etc/default/console-setup
POLKIT=/etc/polkit-1/localauthority.conf.d/52-tails-greeter.conf

log_n_exit() {
    echo "`date "+day %j of %Y [%T]"` $1" >> /var/log/gdm3/tails-greeter.errors
    exit 0
}

# check if $1 is in $2, if not - add $3 to $2
grep_n_set() {
    FCHK=`grep $1 $2`
    if [ ! $FCHK ] ; then
	echo $3 >> $2
    fi
}

# Import locale name
. /var/lib/gdm3/tails.locale || log_n_exit "Locale file not found."
if [ -z "${TAILS_LOCALE_NAME}" ] ; then
    log_n_exit "Locale variable not found."
fi

localedef -c --quiet -f UTF-8 -i "${TAILS_LOCALE_NAME}" "${TAILS_LOCALE_NAME}".UTF-8

# Localize console
grep_n_set "XKBMODEL" ${KBDSET} "XKBMODEL=\"${TAILS_XKBMODEL}\""
grep_n_set "XKBLAYOUT" ${KBDSET} "XKBLAYOUT=\"${TAILS_XKBLAYOUT}\""
grep_n_set "XKBVARIANT" ${KBDSET} "XKBVARIANT=\"${TAILS_XKBVARIANT}\""
grep_n_set "XKBOPTIONS" ${KBDSET} "XKBOPTIONS=\"${TAILS_XKBOPTIONS}\""
sed -i -e "s|^CODESET=.*$|CODESET=\"Uni1\"|" ${CONSET}

# Import the name of the live user
. /etc/live/config.d/username || log_n_exit "Username file not found."
if [ -z "${LIVE_USERNAME}" ] ; then
    log_n_exit "Username variable not found."
fi

# Console setup
grep_n_set "setupcon" /home/"${LIVE_USERNAME}"/.profile "sudo setupcon"

# Import password for superuser access
. /var/lib/gdm3/tails.password || log_n_exit "Password file not found."

# Remove password file
rm --interactive=never -f /var/lib/gdm3/tails.password

# Check if password is actually set
if [ -z "${TAILS_USER_PASSWORD}" ] ; then
    rm -f "${POLKIT}"
    rm -f "${SUDOERS}"
    deluser "${LIVE_USERNAME}" sudo
    log_n_exit "Password variable not found."
fi

# Sets the password
echo "${LIVE_USERNAME}:${TAILS_USER_PASSWORD}" | chpasswd

# Reset the password for default value on logout
echo "echo \"${LIVE_USERNAME}:${LIVE_PASSWORD}\" | /usr/sbin/chpasswd" > /etc/gdm3/PostSession/${DISPLAY}
chmod +x /etc/gdm3/PostSession/${DISPLAY}

# Makes the user sudoer and considered as admin for policykit
adduser "${LIVE_USERNAME}" sudo

# Add sudoers entry
echo "${LIVE_USERNAME} ALL = (ALL) ALL" >> "${SUDOERS}"
chmod 0440 "${SUDOERS}"

# Add PolKit config
echo "[Configuration]" > "${POLKIT}"
echo "AdminIdentities=unix-user:${LIVE_USERNAME}" >> "${POLKIT}"

# Configure su-to-root to use sudo
sudo -u "${LIVE_USERNAME}" sh -c "echo 'SU_TO_ROOT_SU=sudo' >> /home/${LIVE_USERNAME}/.su-to-rootrc"

# Configure gksu to use sudo
if [ -x /usr/bin/gconftool-2 ]
then
    sudo -u "${LIVE_USERNAME}" gconftool-2 -s -t bool /apps/gksu/sudo-mode true
fi
